The words - predefined tokens are specified between " and ":

program ::= programName ".impl" "{" decllist ";" cmpdstmt "." "}"

decllist ::=  declaration | "{" declaration ";" decllist "}"                

declaration ::= "let" type IDENTIFIER                                     

type1 ::= "bool" | "char" | "int" | "string"                               

arraydecl ::= type1 "array" "[" nr "]"                               

type  ::= type1|arraydecl                                                  

cmpdstmt ::= "{" stmtlist "}"                                              

stmtlist ::= stmt | stmt ";" stmtlist                                      

stmt ::= simplstmt | structstmt                                            

simplstmt ::= assignstmt | iostmt                                          

assignstmt ::= IDENTIFIER "=" expression                                   

expression ::= expression OPERATOR term | term                             

term ::= term "*" factor | factor                                          

factor ::= "(" expression ")" | IDENTIFIER                                 

iostmt ::= "READ" "(" IDENTIFIER ")" | "WRITE" "(" IDENTIFIER ")"          

structstmt ::= cmpdstmt | ifstmt | whilestmt                                

ifstmt ::= "IF" condition "THEN" stmt ["ELSE" stmt]                        

whilestmt ::= "WHILE" condition "DO" stmt                                  

condition ::= expression RELATION expression                               

RELATION ::= "<" | "<=" | "==" | "!=" | ">=" | ">"                         